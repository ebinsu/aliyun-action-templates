name: docker-push-template

on:
  workflow_call:
    inputs:
      java_version:
        required: true
        type: string
      java_cache:
        required: false
        type: string
        default: 'maven'
      docker_registry:
        required: false
        type: string
        default: 'registry.cn-hangzhou.aliyuncs.com'
      docker_build_path:
        required: false
        type: string
        default: '.'
      docker_image_name:
        required: true
        type: string
      build_script:
        required: false
        type: string
      

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    
    - name: Set up JDK
      uses: actions/setup-java@v3.14.1
      with:
        java-version: ${{ inputs.java_version }}
        distribution: 'temurin'
        cache: ${{ inputs.java_cache }}
        
    - name: Java Build Steps
      if: ${{ inputs.build_script != '' }}
      run: ${{ inputs.build_script }}
      
    - name: Docker Setup Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3.10.0

    - name: Cache Docker layers
      uses: actions/cache@v4.2.3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.ref }}
        restore-keys: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}

    - name: Output image version
      id: set_image_version
      run: |
        original="${{ github.ref_name }}"
        clean_version="${original#release/}"
        echo "$clean_version"
        echo "VERSION=$clean_version" >> $GITHUB_OUTPUT

    - name: Docker Metadata action
      id: docker-meta
      uses: docker/metadata-action@v5.7.0
      with:
        images: ${{ inputs.docker_registry }}/${{ docker_image_name }}
        tags: |
          type=raw,value=${{ steps.set_image_version.outputs.VERSION }}
          type=raw,value=latest

    - name: Docker Login
      uses: docker/login-action@v3.4.0
      with:
        registry: ${{ inputs.docker_registry }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        logout: true

    - name: Build and push
      uses: docker/build-push-action@v6.16.0
      with:
        context: ${{ inputs.docker_build_path }}
        push: true
        tags: ${{ steps.docker-meta.outputs.tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  
